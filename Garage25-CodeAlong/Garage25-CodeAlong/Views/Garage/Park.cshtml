@model Garage25_CodeAlong.Models.ViewModels.ParkedVehicleViewModel

@{
    ViewBag.Title = "Park";
}

<h2>Park</h2>


@using (Html.BeginForm("Park","Garage",FormMethod.Post))              //added view name.contoller name
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ParkedVehicleViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RegNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegNum, new { htmlAttributes = new { @class = "form-control" } })     
                @Html.ValidationMessageFor(model => model.RegNum, "", new { @class = "text-danger" })
            </div>
        </div>
                                              
        <div class="form-group">
            @Html.LabelFor(model => model.Members, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @*@Html.DropDownList("Owner",Model.Members, "", new { @class = "text-danger" })*@
                @Html.DropDownListFor(model => Model.MemberId,Model.Members, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Members, "", new { @class = "text-danger" })
            </div>
        </div>@*//these two forms added in the view*@@*//here we have added instead of viewbagsin controller and edited here as well*@
        <div class="form-group">
            @Html.LabelFor(model => model.Types, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model=>model.TypesId, Model.Types, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Types, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoOfWheels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoOfWheels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoOfWheels, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.ParkingTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParkingTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParkingTime, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
